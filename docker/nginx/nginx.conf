user  www-data;
worker_processes  auto;
worker_rlimit_nofile 65535;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
	multi_accept on;
	accept_mutex on;
    worker_connections  8096;
}


http {
    charset utf-8;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    types_hash_max_size 2048;
    client_max_body_size 50m;
    client_body_buffer_size 4m;
    keepalive_timeout  65;

    map_hash_max_size 2048;
    map_hash_bucket_size 2048;
    server_names_hash_bucket_size 256;
    server_tokens off;

    # limit_req_log_level warn;
    # limit_req_zone $binary_remote_addr zone=login:10m rate=10r/m;

    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;


    add_header X-Frame-Options DENY;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    # add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    # add_header Strict-Transport-Security "max-age=31536000" always;


    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main buffer=512k;
    error_log /var/log/nginx/error.log warn;

    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types application/javascript application/rss+xml application/vnd.ms-fontobject application/x-font application/x-font-opentype application/x-font-otf application/x-font-truetype application/x-font-ttf application/x-javascript application/xhtml+xml application/xml font/opentype font/otf font/ttf image/svg+xml image/x-icon text/css text/javascript text/plain text/xml;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    upstream hfs_app {
        ip_hash;
        server hfs_app:8000; # forward to docker
        keepalive 32;
    }

    include /etc/nginx/conf.d/*.conf;
}
